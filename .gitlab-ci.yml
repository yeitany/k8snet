
image: golang:latest
stages:          # List of stages for jobs, and their order of execution
  - lint
  - test
  - build
  - push

lint-test-job:   # This job also runs in the test stage.
  stage: lint    # It can run at the same time as unit-test-job (in parallel).
  script:
    - make lint

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - echo "Code coverage is 90%"

build-job:       # This job runs in the build stage, which runs first.
  artifacts:
    paths:
      - .bin/
  stage: build
  script:
    - make build

build-image:
  stage: push
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  dependencies:
    - build-job
  script:
    - echo "Deploying application..."
    - ls -la .bin
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
    - echo "Compile complete."

